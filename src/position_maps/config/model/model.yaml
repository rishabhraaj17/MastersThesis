# @package _global_
dropout: 0.0
batch_norm: False
use_torch_deform_conv: True

# model
unet:
  num_classes: 1
  input_channels: 3
  num_layers: 5
  num_additional_double_conv_layers: 0 # 1 # 0  # default: 0
  features_start: 64
  bilinear: False

# old version
stacked_hourglass:
  num_stacks: 3
  num_classes: 1
  input_channels: 3
  batch_norm: False
  increase: 0

hourglass:
  downsample_times: 5
  #  downsample_times: 2
  num_stacks: 2
  stage_channels: [ 256, 256, 384, 384, 384, 512 ]
  #  stage_channels: [ 256, 384, 512 ]
  #  stage_blocks: [2, 2, 2, 2, 2, 4]
  stage_blocks: [ 2, 1, 2, 1, 1, 3 ]
  #  stage_blocks: [ 2, 2, 4 ]
  feat_channel: 256
  norm_cfg_type: 'BN'
  norm_cfg_requires_grad: True
  pretrained: null
  init_cfg: null

  head:
    num_layers: 2
    bilinear: False
    enable_last_layer_activation: False
    use_conv_deform_conv: True

  last_conv:
    out_channels: 1
    kernel: 3
    stride: 1
    padding: 1

    offset_kernel: 3
    offset_stride: 1
    offset_padding: 1

  upsample_params:
    factor: 2
    mode: bilinear
    align_corners: True
    kernel_bilinear: 1
    kernel: 2
    stride: 2

    offset_kernel: 2
    offset_stride: 2
    offset_padding: 0

  deform:
    groups: 1
    kernel: 3
    padding: 1

  use_deformable_conv: False

trans_unet:
  config: 'R50-ViT-B_16'
  img_size: [ 256, 256 ]
  num_classes: 1
  zero_head: False
  vis: False
  use_attn_decoder: True

vit:
  img_size: [ 256, 256 ]
  patch_size: 16
  in_channels: 3
  embed_dim: 768
  depth: 12
  num_heads: 12
  mlp_ratio: 4
  out_indices: 11
  qkv_bias: True
  qk_scale: null
  drop_rate: 0
  attn_drop_rate: 0
  drop_path_rate: 0
  norm_cfg:
    type: 'LN'
    eps: 1e-6
    requires_grad: True
  act_cfg:
    type: 'GELU'
  norm_eval: False
  final_norm: False
  out_shape: 'NCHW'
  interpolate_mode: 'bicubic'
  with_cls_token: True
  with_cp: False

  seg_head:
    in_channels: 3
    out_channels: 1
    kernel_size: 1
    padding: 0
    stride: 1
    use_bn: True

r2_attn_unet:
  initial_out_channels: 64
  num_layers: 5
  in_channels: 3
  out_channels: 1
  t: 2

  use_cam_pam: [ True, True, True, True, False ]

  max_pool:
    kernel: 2
    stride: 2

attn_unet:
  initial_out_channels: 64
  num_layers: 5
  in_channels: 3
  out_channels: 1

  use_cam_pam: [ True, True, True, False ]
  use_bn: False  # not used yet

  max_pool:
    kernel: 2
    stride: 2

mm_segmentator:
  align_corners: True
  with_aux_head: False
  with_secondary_aux_head: False

  norm:
    type: 'BN'
    requires_grad: True

  pretrained: null # or url

  backbone: 'mobile_net_v3_large'
  head: 'lraspp_large'
  aux_head: ''
  secondary_aux_head: ''

deep_lab_v3:
  backbone: 'r50'  # 'r50', 'r101', 'mnv3_large'
  pretrained: False
  aux_loss: True
  num_classes: 1

deep_lab_v3_plus:
  in_channels: 3

  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  use_fcrn_up_project: False
  align_corners: True
  use_correctors: False
  with_aux_head: True
  pretrained: 'open-mmlab://resnet50_v1c' # or url

  small:
    pretrained: 'open-mmlab://resnet18_v1c' # or url
    with_aux_head: False
    align_corners: True
    aspp_head: False  # if false then DepthwiseSeparableASPPHead
    with_deconv_head: True
    head_conf: 'three_two_small'
    resnet_depth: 18

    load_pretrained_manually: False
    #  local_pretrained_path: '/usr/stud/rajr/.cache/torch/hub/checkpoints/resnet18_v1c-2cccc1ad.pth'
    local_pretrained_path: '/home/rishabh/.cache/torch/hub/checkpoints/resnet18_v1c-2cccc1ad.pth'
    load_strictly: False

  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: True
    use_double_conv: True

  aspp_head: False  # if false then DepthwiseSeparableASPPHead
  with_deconv_head: True
  head_conf: 'three_two'
  resnet_depth: 50

  load_pretrained_manually: True
  #  local_pretrained_path: '/usr/stud/rajr/.cache/torch/hub/checkpoints/resnet50_v1c-2cccc1ad.pth'
  local_pretrained_path: '/home/rishabh/.cache/torch/hub/checkpoints/resnet50_v1c-2cccc1ad.pth'
  load_strictly: False

  head:
    out_ch: 1
  #    out_ch: 64
  aux_head:
    #    out_ch: 32
    out_ch: 1

  head_corrector:
    in_ch: [ 64, 32 ]
    #    in_ch: [ 1, 1 ]
    out_ch: [ 32, 1 ]
  #    out_ch: [ 1, 1 ]

  aux_head_corrector:
    in_ch: [ 32, 16, 8 ]
    #    in_ch: [ 1, 1, 1 ]
    out_ch: [ 16, 8, 1 ]
#    out_ch: [ 1, 1, 1 ]

slow_fast:
  in_channels: 3

  norm:
    type: 'BN'
    requires_grad: True

  align_corners: True
  with_aux_head: False
  pretrained: null  # 'open-mmlab://resnet50_v1c' # or url

  aspp_head: False  # if false then DepthwiseSeparableASPPHead
  with_deconv_head: True
  head_conf: 'three_two_small'
  resnet_depth: 50

  load_pretrained_manually: False
  #  local_pretrained_path: '/usr/stud/rajr/.cache/torch/hub/checkpoints/resnet50_v1c-2cccc1ad.pth'
  local_pretrained_path: '/home/rishabh/.cache/torch/hub/checkpoints/resnet50_v1c-2cccc1ad.pth'
  load_strictly: False

  head:
    out_ch: 1
  aux_head:
    out_ch: 1

deep_lab_v3_gan:
  norm:
    type: 'BN'
    requires_grad: True

  generator:
    lr: 1e-3
    amsgrad: False
    weight_decay: 0

  discriminator:
    lr: 1e-3
    amsgrad: False
    weight_decay: 0

  use_up_module: False
  use_fcrn_up_project: False
  align_corners: True
  use_correctors: False
  with_aux_head: False
  pretrained: 'open-mmlab://resnet50_v1c' # or url

  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: True
    use_double_conv: True

  aspp_head: False  # if false then DepthwiseSeparableASPPHead
  with_deconv_head: True
  head_conf: 'three_two'
  resnet_depth: 50

  load_pretrained_manually: True
  #  local_pretrained_path: '/usr/stud/rajr/.cache/torch/hub/checkpoints/resnet50_v1c-2cccc1ad.pth'
  local_pretrained_path: '/home/rishabh/.cache/torch/hub/checkpoints/resnet50_v1c-2cccc1ad.pth'
  load_strictly: False

  head:
    out_ch: 1
  #    out_ch: 64
  aux_head:
    #    out_ch: 32
    out_ch: 1

  head_corrector:
    in_ch: [ 64, 32 ]
    #    in_ch: [ 1, 1 ]
    out_ch: [ 32, 1 ]
  #    out_ch: [ 1, 1 ]

  aux_head_corrector:
    in_ch: [ 32, 16, 8 ]
    #    in_ch: [ 1, 1, 1 ]
    out_ch: [ 16, 8, 1 ]
#    out_ch: [ 1, 1, 1 ]


ccnet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  with_aux_head: True
  pretrained: null # or url
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

danet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  with_aux_head: True
  pretrained: null # or url
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

dmnet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  with_aux_head: True
  pretrained: null # or url
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

hrnet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  pretrained: null # or url
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

hrposenet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  pretrained: null # 'https://download.openmmlab.com/mmpose/pretrain_models/hrnet_w32-36af842e.pth' # or url
  head_conf: 'two_two'
  model: 'hr32'
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

topdownposenet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  pretrained: null # or url
  head_conf: 'two_two'
  backbone: 'resnet50'
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

ocrnet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  pretrained: null # or url
  num_stages: 2
  resnet_depth: 50
  model: 'hr18_small'
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

pspnet:
  norm:
    type: 'BN'
    requires_grad: True
  use_up_module: False
  align_corners: True
  use_correctors: False
  with_aux_head: True
  pretrained: null # or url
  bacbonne: 'resnet'  # 'unet'
  up:
    in_ch: 1
    out_ch: 1
    use_convt2d: False
    bilinear: False
    ch_div_factor: 1
    skip_double_conv: False
    use_double_conv: False

trajectory_based:
  rnn:
    deterministic:
      rnn_type: 'LSTM'  # 'GRU'  'RNN'
      batch_first: False

      in_features: 2
      out_features: 2

      embedding_dim_scalars: 8
      encoder_h_g_scalar: 8
      decoder_h_g_scalar: 16

      pred_len: 12
      mlp_vec: 64
      mlp_scalar: 32
      social_attention: False
      social_dim_scalar: 10

    generator:
      rnn_type: 'LSTM'  # 'GRU'  'RNN'
      batch_first: False

      in_features: 2
      out_features: 2

      embedding_dim_scalars: 8
      encoder_h_g_scalar: 8
      decoder_h_g_scalar: 16

      pred_len: 12
      noise_scalar: 4
      mlp_vec: 64
      mlp_scalar: 32
      noise_type: "local"
      social_attention: False
      social_dim_scalar: 10

    discriminator:
      encoder_h_dim_d: 64
      embedding_dim_scalars: 16
      dropout: 0.0
      mlp_scalar: 32
      social_attention: False
      social_dim_scalar: 10

      batch_first: False

      encoder_prediction:
        rnn_type: 'LSTM'  # 'GRU'  'RNN'
        batch_first: False

        in_features: 2
        encoder_h_dim_d: 64
        embedding_dim: 64
        dropout: 0.0

        mlp_dim: 32
        dropout_cnn: 0
        batch_norm: False

      motion_encoder:
        rnn_type: 'LSTM'  # 'GRU'  'RNN'
        batch_first: False

        in_features: 2
        encoder_h_dim: 64
        embedding_dim: 16
        dropout: 0.0

  transformer:
    encoder:  # also for motion_generator
      in_features: 2
      seq_len: 7

      d_model: 32 # 64
      nhead: 4 # 8
      dim_feedforward: 128 # 64 # 512  # 2048 for 512 d_model
      dropout: 0.1
      activation: 'relu'

      num_layers: 4 # 6
      norm: null  # 'layer_norm'

    decoder:
      in_features: 2
      out_features: 2
      seq_len: 12

      d_model: 32 # 64
      nhead: 4 # 6
      dim_feedforward: 128 # 64 # 512  # 2048 for 512 d_model
      dropout: 0.1
      activation: 'relu'

      num_layers: 4 # 6
      norm: null  # 'layer_norm'

    generator:
      lr: 1e-4
      weight_decay: 5e-10
      amsgrad: False

      noise_scalar: 4
      mlp_scalar: 64
      noise_activation: 'Tanh'

    discriminator:
      lr: 1e-4
      weight_decay: 5e-10
      amsgrad: False

      in_features: 2
      out_features: 2
      seq_len: 12

      d_model: 32  # 64
      nhead: 4  # 8
      dim_feedforward: 128  # 512  # 2048 for 512 d_model
      dropout: 0.1
      activation: 'relu'

      num_layers: 4  # 6
      norm: null  # 'layer_norm'

      use_gan_loss: True
      gan_loss_type: 'vanilla'
      gan_loss_weight: 1.0

  images:
    globall:
      out_channels: 128

    local:
      out_channels: 64

    encoder: # also for motion_generator
      in_features: 2
      seq_len: 8

      d_model: 128 # 64
      nhead: 4 # 8
      dim_feedforward: 512 # 64 # 512  # 2048 for 512 d_model
      dropout: 0.1
      activation: 'relu'

      num_layers: 4 # 6
      norm: null  # 'layer_norm'

      noise_scalar: 4
      mlp_scalar: 256
      noise_activation: 'Tanh'

    decoder:
      in_features: 2
      out_features: 2
      seq_len: 14

      d_model: 128 # 64
      nhead: 4 # 6
      dim_feedforward: 512 # 64 # 512  # 2048 for 512 d_model
      dropout: 0.1
      activation: 'relu'

      num_layers: 4 # 6
      norm: null  # 'layer_norm'
